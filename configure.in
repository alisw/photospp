#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.59)
AC_INIT( [Photos C++ Interface], [1.0.0], [tomasz.przedzinski@uj.edu.pl] )
AC_LANG_CPLUSPLUS

AC_PREFIX_DEFAULT([`pwd`])
AC_CONFIG_SRCDIR([src/Photos.cxx])

##############################################################################
# Process command line options

echo ""

AC_MSG_CHECKING([if HepMC location defined])
AC_ARG_WITH(
  [HepMC],
  [AS_HELP_STRING([--with-HepMC], [Path to HepMC 2.xx] )],
  [AC_MSG_RESULT([$with_HepMC])],
  [ AC_MSG_RESULT([no]) ;
    echo "ERROR: HepMC location not specified" ;
    echo "       to define location run configure with parameter" ;
    echo "         --with-HepMC=/path/to/HepMC" ;
    exit 1
  ]
)

AC_MSG_CHECKING([if MC-TESTER location defined])
AC_ARG_WITH(
  [MC-Tester],
    [AS_HELP_STRING([--with-MC-Tester], [Path to MC-TESTER 1.23 or later (used by examples only)] )],
  [AC_MSG_RESULT([$with_MC_Tester])],
  [AC_MSG_RESULT([no])]
)

AC_MSG_CHECKING([if Pythia 8 location defined])
AC_ARG_WITH(
  [Pythia8],
    [AS_HELP_STRING([--with-Pythia8], [Path to Pythia 8.1 or later (used by examples only)] )],
  [AC_MSG_RESULT([$with_Pythia8])],
  [AC_MSG_RESULT([no])]
)

AC_MSG_CHECKING([if Tauola location defined])
AC_ARG_WITH(
  [Tauola],
    [AS_HELP_STRING([--with-Pythia8], [Path to Tauola C++ interface (used by examples only)] )],
  [AC_MSG_RESULT([$with_Tauola])],
  [AC_MSG_RESULT([no])]
)

echo ""

##############################################################################
# Check for programs
AC_PROG_MAKE_SET
AC_PROG_LN_S
AC_PROG_CC
AC_PROG_CXX
AC_PROG_RANLIB

# here is a trick to preffer
#   gfortran for gcc4 and higher
#   and g77 for gcc3 and lower
flist="gfortran g77 f77"
if [[[ "$(gcc -dumpversion | cut -d . -f 1)" < "4" ]]] ; then
  flist="g77 f77 gfortran"
fi

AC_PROG_F77([$flist])
AC_PROG_CPP
AC_CHECK_PROG(DIRECT_CPP,cpp,cpp,$CPP)

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_CHECK_TYPES([ptrdiff_t])

# Checks for library functions.
AC_FUNC_MALLOC
AC_FUNC_STRFTIME
AC_CHECK_FUNCS([atexit getcwd pow sqrt], ,
[ echo "" &&
  echo "ERROR: Basic functions not found. Something's wrong with paths." &&
  exit -1
])

##############################################################################
# Check for HepMC header files
AC_SUBST(with_HepMC)
CPPFLAGS="-I$with_HepMC/include $CPPFLAGS"

AC_CHECK_HEADERS([HepMC/Version.h], ,
[ echo "" &&
  echo "ERROR: HepMC not found. To provide location use:" &&
  echo "       './configure --with-HepMC=<path_to_HepMC>' "
  echo "       (Consider using 'source platform/afs.paths.sh' (or .csh) )"
  echo ""
  exit -1
])

AC_CHECK_HEADERS([HepMC/Units.h], ,
[ echo "" &&
  echo "WARNING: HepMC Version lower than 2.04! " &&
  echo "         The interface will be converted" &&
  echo "         To HepMC 2.03                  " &&
  echo "" &&
  ./platform/to-HepMC-2.03.sh
])

##############################################################################
photos=`pwd`
pythia8data=$PYTHIA8DATA

if test -z "$pythia8data"; then
	pythia8data=$with_Pythia8/xmldoc
fi

ln -sf platform/make.inc make.inc

AC_SUBST(photos)
AC_SUBST(with_HepMC)
AC_SUBST(pythia8data)
AC_SUBST(with_Tauola)
AC_SUBST(with_Pythia8)
AC_SUBST(with_MC_Tester)
AC_CONFIG_FILES([platform/make.inc configure.paths.sh configure.paths.csh])
AC_OUTPUT

